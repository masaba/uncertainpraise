library(langcog)
library(tidyverse)
library(ggthemes)
library(lme4)
library(lmerTest)
library(readxl)
theme_set(theme_few())
# Chunk 2
d.raw = read_excel("UP_data.xlsx",sheet=2) #read in sheet called "data_ver1"
# Chunk 3
d <- d.raw %>%
transmute(sid = factor(videoclip_ID),
age = Age,
gender = Gender,
sp = SP_Teachername,
op = OP_Teachername,
condition = factor(Condition),
complete_trace = Completes_Tracing,
qualjudge1 = Quality_judge_1,
qualjudge2 = Quality_judge_2,
qualjudge1_explain = Quality_judge_1_Explanation,
qualjudge2_explain = Quality_judge_2_Explanation,
sp_memcheck1 = SP_MemCheck,
op_memcheck1 = OP_MemCheck,
sp_memcheck2 = SP_MemCheck2,
op_memcheck2 = OP_MemCheck2,
contest_choice = ContestChoice,
contest_explain = ContestChoice_Explanation,
advice_choice = AdviceSeeking,
advice_explain = AdviceSeeking_Explanation,
include = Include,
age_bin = factor(trunc(age)))%>%
mutate(contest_selective = contest_choice == sp,
advice_selective = advice_choice == sp)
# Chunk 4
table(d$age_bin,d$qualjudge1)
table(d$age_bin,d$qualjudge2)
# Chunk 5
table(d$age_bin,d$sp_memcheck1)
table(d$age_bin,d$sp_memcheck2) #only kids who failed first check
# Chunk 6
table(d$age_bin,d$op_memcheck1)
table(d$age_bin,d$op_memcheck2) #only kids who failed first check
# Chunk 7
d_filt <- d %>%
filter(sp_memcheck1 == "y" | sp_memcheck2 == "y",
op_memcheck1 == "y" | op_memcheck2 == "y",
complete_trace != "n",
qualjudge1 != "n",
qualjudge2 != "n",
include =="y",
age >= 4,
age < 6)
#save filtered data for paper
d_filt_e1 <- d_filt
save(d_filt_e1, file = "d_filt_e1.RData")
# Chunk 8
table(d_filt$contest_choice)
dems_filt <- d_filt %>%
# group_by(age_bin) %>%
summarise(num_age = n(),
avg_age = mean(age),
sd_age = sd(age),
min_age = min(age),
max_age = max(age))
dems_filt
# Chunk 9
table(d_filt$age_bin,d_filt$condition)
table(d_filt$age_bin, d_filt$sp)
# Chunk 10
contest_ms <- d_filt %>%
mutate(contest_selective = as.numeric(contest_selective))%>%
group_by(age_bin) %>%
multi_boot_standard(col = "contest_selective")
ggplot(contest_ms, aes(x = age_bin, y = mean, fill = age_bin)) +
geom_bar(stat="identity", width=.5) +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width = .5))+
xlab("Age Group") +
ylab("Proportion Choosing Selective Praiser") +
langcog::scale_colour_solarized()  +
ggthemes::theme_few() +
ylim(0,1) +
geom_hline(aes(yintercept=.50), colour="#990000", linetype="dashed") + theme(legend.position = "none")
# Chunk 13
contest_n = d_filt %>%
group_by(age_bin) %>%
summarise(selective_n = sum(contest_selective),
total_n = n())
contest_n
contest_order = d_filt %>%
group_by(age_bin,condition) %>%
summarise(selective_n = sum(contest_selective),
total_n = n())
contest_order
# Chunk 14
binom.test(contest_n$selective_n[1],contest_n$total_n[1])
# Chunk 15
binom.test(contest_n$selective_n[2],contest_n$total_n[2])
# Chunk 16
# summary(glmer(contest_selective ~ age + gender + condition +
#               (1|sid),
#               data = d_filt,
#               family = "binomial"))
#trimmed according to langcog lab standard practices
summary(glmer(contest_selective ~ age + condition +
(1|sid),
data = d_filt,
family = "binomial"))
# Chunk 17
# summary(glmer(advice_selective ~ age + gender + condition +
#               (1|sid),
#               data = d_filt,
#               family = "binomial"))
#trimmed according to langcog lab standard practices
summary(glmer(advice_selective ~ age +
(1|sid),
data = d_filt,
family = "binomial"))
rm(list=ls())
knitr::opts_chunk$set(fig.width=8, fig.height=5,
echo=TRUE, warning=FALSE, message=FALSE, cache=FALSE)
library(psych)
library(langcog)
library(tidyverse)
library(ggthemes)
library(lme4)
library(lmerTest)
library(readxl)
theme_set(theme_few())
d.raw = read_excel("UP_data.xlsx",sheet=2) #read in sheet called "data_ver1"
setwd("~/Dropbox/UncertainPraise/analysis")
# Chunk 1
rm(list=ls())
knitr::opts_chunk$set(fig.width=8, fig.height=5,
echo=TRUE, warning=FALSE, message=FALSE, cache=FALSE)
library(psych)
library(langcog)
library(tidyverse)
library(ggthemes)
library(lme4)
library(lmerTest)
library(readxl)
theme_set(theme_few())
# Chunk 2
d.raw = read_excel("UP_data.xlsx",sheet=2) #read in sheet called "data_ver1"
# Chunk 3
d <- d.raw %>%
transmute(sid = factor(videoclip_ID),
age = Age,
gender = Gender,
sp = SP_Teachername,
op = OP_Teachername,
condition = factor(Condition),
complete_trace = Completes_Tracing,
qualjudge1 = Quality_judge_1,
qualjudge2 = Quality_judge_2,
qualjudge1_explain = Quality_judge_1_Explanation,
qualjudge2_explain = Quality_judge_2_Explanation,
sp_memcheck1 = SP_MemCheck,
op_memcheck1 = OP_MemCheck,
sp_memcheck2 = SP_MemCheck2,
op_memcheck2 = OP_MemCheck2,
contest_choice = ContestChoice,
contest_explain = ContestChoice_Explanation,
advice_choice = AdviceSeeking,
advice_explain = AdviceSeeking_Explanation,
include = Include,
age_bin = factor(trunc(age)))%>%
mutate(contest_selective = contest_choice == sp,
advice_selective = advice_choice == sp)
# Chunk 4
table(d$age_bin,d$qualjudge1)
table(d$age_bin,d$qualjudge2)
# Chunk 5
table(d$age_bin,d$sp_memcheck1)
table(d$age_bin,d$sp_memcheck2) #only kids who failed first check
# Chunk 6
table(d$age_bin,d$op_memcheck1)
table(d$age_bin,d$op_memcheck2) #only kids who failed first check
# Chunk 7
d_filt <- d %>%
filter(sp_memcheck1 == "y" | sp_memcheck2 == "y",
op_memcheck1 == "y" | op_memcheck2 == "y",
complete_trace != "n",
qualjudge1 != "n",
qualjudge2 != "n",
include =="y",
age >= 4,
age < 6)
#save filtered data for paper
d_filt_e1 <- d_filt
save(d_filt_e1, file = "d_filt_e1.RData")
# Chunk 8
table(d_filt$contest_choice)
dems_filt <- d_filt %>%
# group_by(age_bin) %>%
summarise(num_age = n(),
avg_age = mean(age),
sd_age = sd(age),
min_age = min(age),
max_age = max(age))
dems_filt
# Chunk 9
table(d_filt$age_bin,d_filt$condition)
table(d_filt$age_bin, d_filt$sp)
# Chunk 10
contest_ms <- d_filt %>%
mutate(contest_selective = as.numeric(contest_selective))%>%
group_by(age_bin) %>%
multi_boot_standard(col = "contest_selective")
ggplot(contest_ms, aes(x = age_bin, y = mean, fill = age_bin)) +
geom_bar(stat="identity", width=.5) +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width = .5))+
xlab("Age Group") +
ylab("Proportion Choosing Selective Praiser") +
langcog::scale_colour_solarized()  +
ggthemes::theme_few() +
ylim(0,1) +
geom_hline(aes(yintercept=.50), colour="#990000", linetype="dashed") + theme(legend.position = "none")
# Chunk 13
contest_n = d_filt %>%
group_by(age_bin) %>%
summarise(selective_n = sum(contest_selective),
total_n = n())
contest_n
contest_order = d_filt %>%
group_by(age_bin,condition) %>%
summarise(selective_n = sum(contest_selective),
total_n = n())
contest_order
# Chunk 14
binom.test(contest_n$selective_n[1],contest_n$total_n[1])
# Chunk 15
binom.test(contest_n$selective_n[2],contest_n$total_n[2])
# Chunk 16
# summary(glmer(contest_selective ~ age + gender + condition +
#               (1|sid),
#               data = d_filt,
#               family = "binomial"))
#trimmed according to langcog lab standard practices
summary(glmer(contest_selective ~ age + condition +
(1|sid),
data = d_filt,
family = "binomial"))
# Chunk 17
# summary(glmer(advice_selective ~ age + gender + condition +
#               (1|sid),
#               data = d_filt,
#               family = "binomial"))
#trimmed according to langcog lab standard practices
summary(glmer(advice_selective ~ age +
(1|sid),
data = d_filt,
family = "binomial"))
#Here is the other plot version.
tracing_table <- d_filt %>%
group_by(age_bin, tracing_selective) %>%
summarise(n = n()) %>%
mutate(freq = n / sum(n),
SE = sqrt(freq*(1-freq)/sum(n)), #standard error
E = qnorm(.975)*SE, #margin of error
low_95 = freq - E,
upp_95 = freq + E)
tracing_table
tracing_table_ci = filter(tracing_table, tracing_selective == TRUE)
ggplot(tracing_table, aes(x = age_bin, y = freq, fill = tracing_selective)) +
geom_bar(stat="identity", width=.5) +
geom_linerange(data = tracing_table_ci, mapping=aes(x=age_bin, ymin = low_95, ymax=upp_95))+
xlab("Age Group") +
ylab("Proportion Choosing Selective Praiser") +
langcog::scale_colour_solarized()  +
ggthemes::theme_few() +
theme(text = element_text(size=14)) +
ylim(0,1) +
scale_fill_manual(values=c("indianred","steelblue"))
nice_ms <- d_filt %>%
mutate(nice_over = as.numeric(nice_over))%>%
group_by(age_bin) %>%
multi_boot_standard(col = "nice_over")
ggplot(nice_ms, aes(x = age_bin, y = mean, fill = age_bin)) +
geom_bar(stat="identity", width=.5) +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width = .5))+
xlab("Age Group") +
ylab("Proportion Choosing Over-praiser") +
langcog::scale_colour_solarized() +
ggthemes::theme_few() +
ylim(0,1) +
geom_hline(aes(yintercept=.50), colour="#990000", linetype="dashed") +
theme(legend.position = "none")
nice_ms <- d_filt %>%
mutate(nice_over = as.numeric(nice_over))%>%
group_by(age_bin) %>%
multi_boot_standard(col = "nice_over")
# Chunk 1
rm(list=ls())
knitr::opts_chunk$set(fig.width=8, fig.height=5,
echo=TRUE, warning=FALSE, message=FALSE, cache=TRUE)
library(psych)
library(langcog)
library(tidyverse)
library(ggthemes)
library(lme4)
library(lmerTest)
library(readxl)
library(here)
theme_set(theme_few())
# Chunk 2
#trying 'here' package to set wd to upper level directory
data <- here("UP_data.xlsx")
d.raw = read_excel(data, sheet = 4) #read in sheet called "data_ver2"
# Chunk 3
d <- d.raw %>%
transmute(sid = factor(videoclip_ID),
age = Age,
gender = Gender,
sp = SP_Teachername,
op = OP_Teachername,
condition = factor(Condition),
complete_trace = Completes_2Tracings,
qualjudge1 = Quality_judge_1,
qualjudge2 = Quality_judge_2,
qualjudge1_explain = Quality_judge_1_Explanation,
qualjudge2_explain = Quality_judge_2_Explanation,
sp_memcheck1 = SP_MemCheck,
op_memcheck1 = OP_MemCheck,
sp_memcheck2 = SP_MemCheck2,
op_memcheck2 = OP_MemCheck2,
tracing_choice = TracingChoice,
tracing_explain = TracingChoice_Explanation,
nicer_choice = NicerChoice,
nicer_explanation = Nicer_Explanation,
include = Include,
age_bin = factor(trunc(age)))%>%
mutate(tracing_selective = tracing_choice == sp,
nice_over = nicer_choice == op)
# Chunk 4
table(d$age_bin,d$qualjudge1)
table(d$age_bin,d$qualjudge2)
# Chunk 5
table(d$age_bin,d$sp_memcheck1)
table(d$age_bin,d$sp_memcheck2) #only kids who failed first check
# Chunk 6
table(d$age_bin,d$op_memcheck1)
table(d$age_bin,d$op_memcheck2) #only kids who failed first check
# Chunk 7
d_filt <- d %>%
filter(sp_memcheck1 == "y" | sp_memcheck2 == "y",
op_memcheck1 == "y" | op_memcheck2 == "y",
complete_trace != "n",
qualjudge1 != "n",
qualjudge2 != "n",
age >= 4,
age < 6,
include == "y")
#save filtered data for paper
d_filt_e2 <- d_filt
save(d_filt_e2, file = "d_filt_e2.RData")
# Chunk 8
table(d_filt$tracing_selective)
dems_filt <- d_filt %>%
group_by(age_bin) %>%
summarise(num_age = n(),
avg_age = mean(age),
sd_age = sd(age),
min_age = min(age),
max_age = max(age))
dems_filt
# Chunk 9
table(d_filt$age_bin,d_filt$condition)
table(d_filt$age_bin, d_filt$sp)
# Chunk 10
#Note from Emily-- I think I like this type of box plot better (compared to the filled version), because it has less redundant info?
tracing_ms <- d_filt %>%
mutate(tracing_selective = as.numeric(tracing_selective))%>%
group_by(age_bin) %>%
multi_boot_standard(col = "tracing_selective")
ggplot(tracing_ms, aes(x = age_bin, y = mean, fill = age_bin)) +
geom_bar(stat="identity", width=.5) +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width = .5))+
xlab("Age Group") +
ylab("Proportion Choosing Selective Praiser") +
langcog::scale_colour_solarized() +
ggthemes::theme_few() +
ylim(0,1) +
geom_hline(aes(yintercept=.50), colour="#990000", linetype="dashed") +
theme(legend.position = "none")
# Chunk 11
nice_ms <- d_filt %>%
mutate(nice_over = as.numeric(nice_over))%>%
group_by(age_bin) %>%
multi_boot_standard(col = "nice_over")
ggplot(nice_ms, aes(x = age_bin, y = mean, fill = age_bin)) +
geom_bar(stat="identity", width=.5) +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width = .5))+
xlab("Age Group") +
ylab("Proportion Choosing Over-praiser") +
langcog::scale_colour_solarized() +
ggthemes::theme_few() +
ylim(0,1) +
geom_hline(aes(yintercept=.50), colour="#990000", linetype="dashed") +
theme(legend.position = "none")
# Chunk 13
tracing_n = d_filt %>%
group_by(age_bin) %>%
summarise(selective_n = sum(tracing_selective),
total_n = n())
tracing_n
tracing_order = d_filt %>%
group_by(age_bin,condition) %>%
summarise(selective_n = sum(tracing_selective),
total_n = n())
tracing_order
tracing_n_both = d_filt %>%
#  group_by(age_bin) %>%
summarise(selective_n = sum(tracing_selective),
total_n = n())
tracing_n_both
nice_n = d_filt %>%
group_by(age_bin) %>%
summarise(nice_n = sum(nice_over),
total_n = n())
nice_n
# Chunk 14
binom.test(tracing_n_both$selective_n[1],tracing_n_both$total_n[1])
# Chunk 15
binom.test(tracing_n$selective_n[1],tracing_n$total_n[1])
# Chunk 16
binom.test(tracing_n$selective_n[2],tracing_n$total_n[2])
# Chunk 17
binom.test(nice_n$nice_n[1],nice_n$total_n[1])
# Chunk 18
binom.test(nice_n$nice_n[2],nice_n$total_n[2])
# Chunk 19
#summary(glmer(tracing_selective ~ age + gender + condition +
# (1|sid),
# data = d_filt,
# family = "binomial"))
#trimmed according to langcog lab standard practices
summary(glmer(tracing_selective ~ age + condition +
(1|sid),
data = d_filt,
family = "binomial"))
# Chunk 20
# summary(glmer(nice_over ~ age + gender + condition +
#               (1|sid),
#               data = d_filt,
#               family = "binomial"))
summary(glmer(nice_over ~ age + condition +
(1|sid),
data = d_filt,
family = "binomial"))
nice_ms <- d_filt %>%
mutate(nice_over = as.numeric(nice_over))%>%
group_by(age_bin) %>%
multi_boot_standard(col = "nice_over")
ggplot(nice_ms, aes(x = age_bin, y = mean, fill = age_bin)) +
geom_bar(stat="identity", width=.5) +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width = .5))+
xlab("Age Group") +
ylab("Proportion Choosing Over-praiser") +
langcog::scale_colour_solarized() +
ggthemes::theme_few() +
ylim(0,1) +
geom_hline(aes(yintercept=.50), colour="#990000", linetype="dashed") +
theme(legend.position = "none")
View(d_filt)
nice_ms <- d_filt %>%
mutate(nice_over = as.numeric(nice_over))%>%
group_by(age_bin) %>%
multi_boot_standard(col = "nice_over")
nice_ms <- d_filt %>%
mutate(nice_over = as.numeric(nice_over))%>%
group_by(age_bin) %>%
multi_boot_standard(col = "nice_over", na.rm = TRUE)
nice_ms <- d_filt %>%
mutate(nice_over = as.numeric(nice_over))%>%
group_by(age_bin) %>%
multi_boot_standard(col = "nice_over", na.rm = TRUE)
ggplot(nice_ms, aes(x = age_bin, y = mean, fill = age_bin)) +
geom_bar(stat="identity", width=.5) +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width = .5))+
xlab("Age Group") +
ylab("Proportion Choosing Over-praiser") +
langcog::scale_colour_solarized() +
ggthemes::theme_few() +
ylim(0,1) +
geom_hline(aes(yintercept=.50), colour="#990000", linetype="dashed") +
theme(legend.position = "none")
install.packages('packrat')
library(png)
library(grid)
library(ggplot2)
library(xtable)
library(tidyverse)
library(langcog)
library(lme4)
library(packrat)
packrat::init
setwd("~/Desktop/uncertainpraise/cogsci_writeup")
packrat::init()
remove.packages('Matrix')
install.packages('Matrix')
setwd("~/Desktop/uncertainpraise/cogsci_writeup")
packrat::init()
packrat::init()
